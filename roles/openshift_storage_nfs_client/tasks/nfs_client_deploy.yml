---
- import_tasks: mktemp.yml

- name: Verify target namespace exists
  oc_project:
    state: present
    name: "{{ nfs_client_namespace }}"

- name: Copy Service Account
  copy:
    src: "service-account.yml"
    dest: "{{ mktemp.stdout }}/service-account.yml"

- name: Create Service Account
  oc_obj:
    namespace: "{{ nfs_client_namespace }}"
    kind: "ServiceAccount"
    name: "nfs-client-provisioner"
    state: present
    files:
    - "{{ mktemp.stdout }}/service-account.yml"

- name: Copy Cluster Role
  copy:
    src: "cluster-role.yml"
    dest: "{{ mktemp.stdout }}/cluster-role.yml"

- name: Create Cluster Role
  oc_obj:
    namespace: "{{ nfs_client_namespace }}"
    kind: "ClusterRole"
    name: "nfs-client-provisioner-runner"
    state: present
    files:
    - "{{ mktemp.stdout }}/cluster-role.yml"

- name: Generate Cluster Role Binding file
  template:
    src: "cluster-role-binding.yml.j2"
    dest: "{{ mktemp.stdout }}/cluster-role-binding.yml"

- name: Create Cluster Role Binding
  oc_obj:
    namespace: "{{ nfs_client_namespace }}"
    kind: "ClusterRoleBinding"
    name: "run-nfs-client-provisioner"
    state: present
    files:
    - "{{ mktemp.stdout }}/cluster-role-binding.yml"

- name: Copy Role
  copy:
    src: "role.yml"
    dest: "{{ mktemp.stdout }}/role.yml"

- name: Create Role
  oc_obj:
    namespace: "{{ nfs_client_namespace }}"
    kind: "Role"
    name: "leader-locking-nfs-client-provisioner"
    state: present
    files:
    - "{{ mktemp.stdout }}/role.yml"

- name: Generate Role Binding file
  template:
    src: "role-binding.yml.j2"
    dest: "{{ mktemp.stdout }}/role-binding.yml"

- name: Create Role Binding
  oc_obj:
    namespace: "{{ nfs_client_namespace }}"
    kind: "RoleBinding"
    name: "leader-locking-nfs-client-provisioner"
    state: present
    files:
    - "{{ mktemp.stdout }}/role-binding.yml"

- name: Add root to service account
  command: >
    {{ openshift_client_binary }} --config=/etc/origin/master/admin.kubeconfig adm policy add-scc-to-user hostmount-anyuid system:serviceaccount:{{ nfs_client_namespace }}:nfs-client-provisioner

- name: Generate Deployment file
  template:
    src: "deployment.yml.j2"
    dest: "{{ mktemp.stdout }}/deployment.yml"

- name: Create Deployment
  oc_obj:
    namespace: "{{ nfs_client_namespace }}"
    kind: "Deployment"
    name: "nfs-client-provisioner"
    state: present
    files:
    - "{{ mktemp.stdout }}/deployment.yml"

- name: Copy Class File
  copy:
    src: "class.yml"
    dest: "{{ mktemp.stdout }}/class.yml"

- name: Create Storage Class
  oc_obj:
    namespace: "{{ nfs_client_namespace }}"
    kind: "StorageClass"
    name: "managed-nfs-storage"
    state: present
    files:
    - "{{ mktemp.stdout }}/class.yml"